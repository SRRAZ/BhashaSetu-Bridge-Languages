// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPronunciationPracticeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonEasy;

  @NonNull
  public final Button buttonHard;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final ImageButton buttonPlayNormalPronunciation;

  @NonNull
  public final ImageButton buttonPlaySlowPronunciation;

  @NonNull
  public final Button buttonRepeat;

  @NonNull
  public final CardView cardViewWord;

  @NonNull
  public final LinearLayout layoutButtons;

  @NonNull
  public final ProgressBar progressBarPronunciation;

  @NonNull
  public final TextView textViewAsk;

  @NonNull
  public final TextView textViewEnglishWord;

  @NonNull
  public final TextView textViewHindiWord;

  @NonNull
  public final TextView textViewInstruction;

  @NonNull
  public final TextView textViewProgress;

  @NonNull
  public final TextView textViewPronunciationTitle;

  @NonNull
  public final TextView textViewWordPrompt;

  private ActivityPronunciationPracticeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonEasy, @NonNull Button buttonHard, @NonNull Button buttonNext,
      @NonNull ImageButton buttonPlayNormalPronunciation,
      @NonNull ImageButton buttonPlaySlowPronunciation, @NonNull Button buttonRepeat,
      @NonNull CardView cardViewWord, @NonNull LinearLayout layoutButtons,
      @NonNull ProgressBar progressBarPronunciation, @NonNull TextView textViewAsk,
      @NonNull TextView textViewEnglishWord, @NonNull TextView textViewHindiWord,
      @NonNull TextView textViewInstruction, @NonNull TextView textViewProgress,
      @NonNull TextView textViewPronunciationTitle, @NonNull TextView textViewWordPrompt) {
    this.rootView = rootView;
    this.buttonEasy = buttonEasy;
    this.buttonHard = buttonHard;
    this.buttonNext = buttonNext;
    this.buttonPlayNormalPronunciation = buttonPlayNormalPronunciation;
    this.buttonPlaySlowPronunciation = buttonPlaySlowPronunciation;
    this.buttonRepeat = buttonRepeat;
    this.cardViewWord = cardViewWord;
    this.layoutButtons = layoutButtons;
    this.progressBarPronunciation = progressBarPronunciation;
    this.textViewAsk = textViewAsk;
    this.textViewEnglishWord = textViewEnglishWord;
    this.textViewHindiWord = textViewHindiWord;
    this.textViewInstruction = textViewInstruction;
    this.textViewProgress = textViewProgress;
    this.textViewPronunciationTitle = textViewPronunciationTitle;
    this.textViewWordPrompt = textViewWordPrompt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPronunciationPracticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPronunciationPracticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pronunciation_practice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPronunciationPracticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_easy;
      Button buttonEasy = ViewBindings.findChildViewById(rootView, id);
      if (buttonEasy == null) {
        break missingId;
      }

      id = R.id.button_hard;
      Button buttonHard = ViewBindings.findChildViewById(rootView, id);
      if (buttonHard == null) {
        break missingId;
      }

      id = R.id.button_next;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.button_play_normal_pronunciation;
      ImageButton buttonPlayNormalPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayNormalPronunciation == null) {
        break missingId;
      }

      id = R.id.button_play_slow_pronunciation;
      ImageButton buttonPlaySlowPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlaySlowPronunciation == null) {
        break missingId;
      }

      id = R.id.button_repeat;
      Button buttonRepeat = ViewBindings.findChildViewById(rootView, id);
      if (buttonRepeat == null) {
        break missingId;
      }

      id = R.id.card_view_word;
      CardView cardViewWord = ViewBindings.findChildViewById(rootView, id);
      if (cardViewWord == null) {
        break missingId;
      }

      id = R.id.layout_buttons;
      LinearLayout layoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (layoutButtons == null) {
        break missingId;
      }

      id = R.id.progress_bar_pronunciation;
      ProgressBar progressBarPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (progressBarPronunciation == null) {
        break missingId;
      }

      id = R.id.text_view_ask;
      TextView textViewAsk = ViewBindings.findChildViewById(rootView, id);
      if (textViewAsk == null) {
        break missingId;
      }

      id = R.id.text_view_english_word;
      TextView textViewEnglishWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewEnglishWord == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_word;
      TextView textViewHindiWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiWord == null) {
        break missingId;
      }

      id = R.id.text_view_instruction;
      TextView textViewInstruction = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstruction == null) {
        break missingId;
      }

      id = R.id.text_view_progress;
      TextView textViewProgress = ViewBindings.findChildViewById(rootView, id);
      if (textViewProgress == null) {
        break missingId;
      }

      id = R.id.text_view_pronunciation_title;
      TextView textViewPronunciationTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewPronunciationTitle == null) {
        break missingId;
      }

      id = R.id.text_view_word_prompt;
      TextView textViewWordPrompt = ViewBindings.findChildViewById(rootView, id);
      if (textViewWordPrompt == null) {
        break missingId;
      }

      return new ActivityPronunciationPracticeBinding((ConstraintLayout) rootView, buttonEasy,
          buttonHard, buttonNext, buttonPlayNormalPronunciation, buttonPlaySlowPronunciation,
          buttonRepeat, cardViewWord, layoutButtons, progressBarPronunciation, textViewAsk,
          textViewEnglishWord, textViewHindiWord, textViewInstruction, textViewProgress,
          textViewPronunciationTitle, textViewWordPrompt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
