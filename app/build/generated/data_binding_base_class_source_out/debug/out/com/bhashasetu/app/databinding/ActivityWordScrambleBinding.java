// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.view.AudioPronunciationView;
import com.bhashasetu.app.view.HindiTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWordScrambleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioPronunciationView audioPronunciation;

  @NonNull
  public final Button buttonCheck;

  @NonNull
  public final Button buttonClear;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final Button buttonExitFail;

  @NonNull
  public final Button buttonHint;

  @NonNull
  public final Button buttonPlayAgain;

  @NonNull
  public final Button buttonRetry;

  @NonNull
  public final CardView cardAnswer;

  @NonNull
  public final CardView cardLetters;

  @NonNull
  public final CardView cardViewResult;

  @NonNull
  public final CardView cardWord;

  @NonNull
  public final LinearLayout layoutAnswerTiles;

  @NonNull
  public final LinearLayout layoutButtons;

  @NonNull
  public final ConstraintLayout layoutFail;

  @NonNull
  public final LinearLayout layoutHeader;

  @NonNull
  public final LinearLayout layoutLetterTiles;

  @NonNull
  public final ConstraintLayout layoutSuccess;

  @NonNull
  public final ProgressBar progressBarTimer;

  @NonNull
  public final TextView textViewAnswerLabel;

  @NonNull
  public final TextView textViewFailMessage;

  @NonNull
  public final TextView textViewFailScore;

  @NonNull
  public final TextView textViewFailScoreLabel;

  @NonNull
  public final TextView textViewFailTitle;

  @NonNull
  public final TextView textViewFeedback;

  @NonNull
  public final TextView textViewFinalScoreLabel;

  @NonNull
  public final HindiTextView textViewHindiWord;

  @NonNull
  public final TextView textViewInstructions;

  @NonNull
  public final TextView textViewLettersLabel;

  @NonNull
  public final TextView textViewScore;

  @NonNull
  public final TextView textViewSuccessMessage;

  @NonNull
  public final TextView textViewSuccessScore;

  @NonNull
  public final TextView textViewSuccessTitle;

  @NonNull
  public final TextView textViewTimer;

  private ActivityWordScrambleBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioPronunciationView audioPronunciation, @NonNull Button buttonCheck,
      @NonNull Button buttonClear, @NonNull Button buttonExit, @NonNull Button buttonExitFail,
      @NonNull Button buttonHint, @NonNull Button buttonPlayAgain, @NonNull Button buttonRetry,
      @NonNull CardView cardAnswer, @NonNull CardView cardLetters, @NonNull CardView cardViewResult,
      @NonNull CardView cardWord, @NonNull LinearLayout layoutAnswerTiles,
      @NonNull LinearLayout layoutButtons, @NonNull ConstraintLayout layoutFail,
      @NonNull LinearLayout layoutHeader, @NonNull LinearLayout layoutLetterTiles,
      @NonNull ConstraintLayout layoutSuccess, @NonNull ProgressBar progressBarTimer,
      @NonNull TextView textViewAnswerLabel, @NonNull TextView textViewFailMessage,
      @NonNull TextView textViewFailScore, @NonNull TextView textViewFailScoreLabel,
      @NonNull TextView textViewFailTitle, @NonNull TextView textViewFeedback,
      @NonNull TextView textViewFinalScoreLabel, @NonNull HindiTextView textViewHindiWord,
      @NonNull TextView textViewInstructions, @NonNull TextView textViewLettersLabel,
      @NonNull TextView textViewScore, @NonNull TextView textViewSuccessMessage,
      @NonNull TextView textViewSuccessScore, @NonNull TextView textViewSuccessTitle,
      @NonNull TextView textViewTimer) {
    this.rootView = rootView;
    this.audioPronunciation = audioPronunciation;
    this.buttonCheck = buttonCheck;
    this.buttonClear = buttonClear;
    this.buttonExit = buttonExit;
    this.buttonExitFail = buttonExitFail;
    this.buttonHint = buttonHint;
    this.buttonPlayAgain = buttonPlayAgain;
    this.buttonRetry = buttonRetry;
    this.cardAnswer = cardAnswer;
    this.cardLetters = cardLetters;
    this.cardViewResult = cardViewResult;
    this.cardWord = cardWord;
    this.layoutAnswerTiles = layoutAnswerTiles;
    this.layoutButtons = layoutButtons;
    this.layoutFail = layoutFail;
    this.layoutHeader = layoutHeader;
    this.layoutLetterTiles = layoutLetterTiles;
    this.layoutSuccess = layoutSuccess;
    this.progressBarTimer = progressBarTimer;
    this.textViewAnswerLabel = textViewAnswerLabel;
    this.textViewFailMessage = textViewFailMessage;
    this.textViewFailScore = textViewFailScore;
    this.textViewFailScoreLabel = textViewFailScoreLabel;
    this.textViewFailTitle = textViewFailTitle;
    this.textViewFeedback = textViewFeedback;
    this.textViewFinalScoreLabel = textViewFinalScoreLabel;
    this.textViewHindiWord = textViewHindiWord;
    this.textViewInstructions = textViewInstructions;
    this.textViewLettersLabel = textViewLettersLabel;
    this.textViewScore = textViewScore;
    this.textViewSuccessMessage = textViewSuccessMessage;
    this.textViewSuccessScore = textViewSuccessScore;
    this.textViewSuccessTitle = textViewSuccessTitle;
    this.textViewTimer = textViewTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWordScrambleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWordScrambleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_word_scramble, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWordScrambleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_pronunciation;
      AudioPronunciationView audioPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (audioPronunciation == null) {
        break missingId;
      }

      id = R.id.button_check;
      Button buttonCheck = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheck == null) {
        break missingId;
      }

      id = R.id.button_clear;
      Button buttonClear = ViewBindings.findChildViewById(rootView, id);
      if (buttonClear == null) {
        break missingId;
      }

      id = R.id.button_exit;
      Button buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.button_exit_fail;
      Button buttonExitFail = ViewBindings.findChildViewById(rootView, id);
      if (buttonExitFail == null) {
        break missingId;
      }

      id = R.id.button_hint;
      Button buttonHint = ViewBindings.findChildViewById(rootView, id);
      if (buttonHint == null) {
        break missingId;
      }

      id = R.id.button_play_again;
      Button buttonPlayAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayAgain == null) {
        break missingId;
      }

      id = R.id.button_retry;
      Button buttonRetry = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetry == null) {
        break missingId;
      }

      id = R.id.card_answer;
      CardView cardAnswer = ViewBindings.findChildViewById(rootView, id);
      if (cardAnswer == null) {
        break missingId;
      }

      id = R.id.card_letters;
      CardView cardLetters = ViewBindings.findChildViewById(rootView, id);
      if (cardLetters == null) {
        break missingId;
      }

      id = R.id.card_view_result;
      CardView cardViewResult = ViewBindings.findChildViewById(rootView, id);
      if (cardViewResult == null) {
        break missingId;
      }

      id = R.id.card_word;
      CardView cardWord = ViewBindings.findChildViewById(rootView, id);
      if (cardWord == null) {
        break missingId;
      }

      id = R.id.layout_answer_tiles;
      LinearLayout layoutAnswerTiles = ViewBindings.findChildViewById(rootView, id);
      if (layoutAnswerTiles == null) {
        break missingId;
      }

      id = R.id.layout_buttons;
      LinearLayout layoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (layoutButtons == null) {
        break missingId;
      }

      id = R.id.layout_fail;
      ConstraintLayout layoutFail = ViewBindings.findChildViewById(rootView, id);
      if (layoutFail == null) {
        break missingId;
      }

      id = R.id.layout_header;
      LinearLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.layout_letter_tiles;
      LinearLayout layoutLetterTiles = ViewBindings.findChildViewById(rootView, id);
      if (layoutLetterTiles == null) {
        break missingId;
      }

      id = R.id.layout_success;
      ConstraintLayout layoutSuccess = ViewBindings.findChildViewById(rootView, id);
      if (layoutSuccess == null) {
        break missingId;
      }

      id = R.id.progress_bar_timer;
      ProgressBar progressBarTimer = ViewBindings.findChildViewById(rootView, id);
      if (progressBarTimer == null) {
        break missingId;
      }

      id = R.id.text_view_answer_label;
      TextView textViewAnswerLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAnswerLabel == null) {
        break missingId;
      }

      id = R.id.text_view_fail_message;
      TextView textViewFailMessage = ViewBindings.findChildViewById(rootView, id);
      if (textViewFailMessage == null) {
        break missingId;
      }

      id = R.id.text_view_fail_score;
      TextView textViewFailScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewFailScore == null) {
        break missingId;
      }

      id = R.id.text_view_fail_score_label;
      TextView textViewFailScoreLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewFailScoreLabel == null) {
        break missingId;
      }

      id = R.id.text_view_fail_title;
      TextView textViewFailTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewFailTitle == null) {
        break missingId;
      }

      id = R.id.text_view_feedback;
      TextView textViewFeedback = ViewBindings.findChildViewById(rootView, id);
      if (textViewFeedback == null) {
        break missingId;
      }

      id = R.id.text_view_final_score_label;
      TextView textViewFinalScoreLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewFinalScoreLabel == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_word;
      HindiTextView textViewHindiWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiWord == null) {
        break missingId;
      }

      id = R.id.text_view_instructions;
      TextView textViewInstructions = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructions == null) {
        break missingId;
      }

      id = R.id.text_view_letters_label;
      TextView textViewLettersLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewLettersLabel == null) {
        break missingId;
      }

      id = R.id.text_view_score;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      id = R.id.text_view_success_message;
      TextView textViewSuccessMessage = ViewBindings.findChildViewById(rootView, id);
      if (textViewSuccessMessage == null) {
        break missingId;
      }

      id = R.id.text_view_success_score;
      TextView textViewSuccessScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewSuccessScore == null) {
        break missingId;
      }

      id = R.id.text_view_success_title;
      TextView textViewSuccessTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSuccessTitle == null) {
        break missingId;
      }

      id = R.id.text_view_timer;
      TextView textViewTimer = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimer == null) {
        break missingId;
      }

      return new ActivityWordScrambleBinding((ConstraintLayout) rootView, audioPronunciation,
          buttonCheck, buttonClear, buttonExit, buttonExitFail, buttonHint, buttonPlayAgain,
          buttonRetry, cardAnswer, cardLetters, cardViewResult, cardWord, layoutAnswerTiles,
          layoutButtons, layoutFail, layoutHeader, layoutLetterTiles, layoutSuccess,
          progressBarTimer, textViewAnswerLabel, textViewFailMessage, textViewFailScore,
          textViewFailScoreLabel, textViewFailTitle, textViewFeedback, textViewFinalScoreLabel,
          textViewHindiWord, textViewInstructions, textViewLettersLabel, textViewScore,
          textViewSuccessMessage, textViewSuccessScore, textViewSuccessTitle, textViewTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
