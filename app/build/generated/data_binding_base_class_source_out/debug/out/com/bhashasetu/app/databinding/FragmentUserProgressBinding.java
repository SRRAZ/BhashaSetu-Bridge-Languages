// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.ui.SkillProgressView;
import com.bhashasetu.app.ui.XpTrackerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserProgressBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnCustomizeDifficulty;

  @NonNull
  public final Button btnMoreWords;

  @NonNull
  public final CardView cardDifficultySettings;

  @NonNull
  public final CardView cardOverallProgress;

  @NonNull
  public final CardView cardRecommendedSkills;

  @NonNull
  public final CardView cardRecommendedWords;

  @NonNull
  public final CardView cardSkillProgress;

  @NonNull
  public final RecyclerView recyclerRecommendedSkills;

  @NonNull
  public final RecyclerView recyclerRecommendedWords;

  @NonNull
  public final SkillProgressView skillGrammar;

  @NonNull
  public final SkillProgressView skillListening;

  @NonNull
  public final SkillProgressView skillPronunciation;

  @NonNull
  public final SkillProgressView skillReading;

  @NonNull
  public final SkillProgressView skillVocabulary;

  @NonNull
  public final SkillProgressView skillWriting;

  @NonNull
  public final TextView tvDaysStreak;

  @NonNull
  public final TextView tvWeeklyGoal;

  @NonNull
  public final TextView tvWordsMastered;

  @NonNull
  public final XpTrackerView xpTracker;

  private FragmentUserProgressBinding(@NonNull NestedScrollView rootView,
      @NonNull Button btnCustomizeDifficulty, @NonNull Button btnMoreWords,
      @NonNull CardView cardDifficultySettings, @NonNull CardView cardOverallProgress,
      @NonNull CardView cardRecommendedSkills, @NonNull CardView cardRecommendedWords,
      @NonNull CardView cardSkillProgress, @NonNull RecyclerView recyclerRecommendedSkills,
      @NonNull RecyclerView recyclerRecommendedWords, @NonNull SkillProgressView skillGrammar,
      @NonNull SkillProgressView skillListening, @NonNull SkillProgressView skillPronunciation,
      @NonNull SkillProgressView skillReading, @NonNull SkillProgressView skillVocabulary,
      @NonNull SkillProgressView skillWriting, @NonNull TextView tvDaysStreak,
      @NonNull TextView tvWeeklyGoal, @NonNull TextView tvWordsMastered,
      @NonNull XpTrackerView xpTracker) {
    this.rootView = rootView;
    this.btnCustomizeDifficulty = btnCustomizeDifficulty;
    this.btnMoreWords = btnMoreWords;
    this.cardDifficultySettings = cardDifficultySettings;
    this.cardOverallProgress = cardOverallProgress;
    this.cardRecommendedSkills = cardRecommendedSkills;
    this.cardRecommendedWords = cardRecommendedWords;
    this.cardSkillProgress = cardSkillProgress;
    this.recyclerRecommendedSkills = recyclerRecommendedSkills;
    this.recyclerRecommendedWords = recyclerRecommendedWords;
    this.skillGrammar = skillGrammar;
    this.skillListening = skillListening;
    this.skillPronunciation = skillPronunciation;
    this.skillReading = skillReading;
    this.skillVocabulary = skillVocabulary;
    this.skillWriting = skillWriting;
    this.tvDaysStreak = tvDaysStreak;
    this.tvWeeklyGoal = tvWeeklyGoal;
    this.tvWordsMastered = tvWordsMastered;
    this.xpTracker = xpTracker;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_progress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserProgressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_customize_difficulty;
      Button btnCustomizeDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (btnCustomizeDifficulty == null) {
        break missingId;
      }

      id = R.id.btn_more_words;
      Button btnMoreWords = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreWords == null) {
        break missingId;
      }

      id = R.id.card_difficulty_settings;
      CardView cardDifficultySettings = ViewBindings.findChildViewById(rootView, id);
      if (cardDifficultySettings == null) {
        break missingId;
      }

      id = R.id.card_overall_progress;
      CardView cardOverallProgress = ViewBindings.findChildViewById(rootView, id);
      if (cardOverallProgress == null) {
        break missingId;
      }

      id = R.id.card_recommended_skills;
      CardView cardRecommendedSkills = ViewBindings.findChildViewById(rootView, id);
      if (cardRecommendedSkills == null) {
        break missingId;
      }

      id = R.id.card_recommended_words;
      CardView cardRecommendedWords = ViewBindings.findChildViewById(rootView, id);
      if (cardRecommendedWords == null) {
        break missingId;
      }

      id = R.id.card_skill_progress;
      CardView cardSkillProgress = ViewBindings.findChildViewById(rootView, id);
      if (cardSkillProgress == null) {
        break missingId;
      }

      id = R.id.recycler_recommended_skills;
      RecyclerView recyclerRecommendedSkills = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRecommendedSkills == null) {
        break missingId;
      }

      id = R.id.recycler_recommended_words;
      RecyclerView recyclerRecommendedWords = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRecommendedWords == null) {
        break missingId;
      }

      id = R.id.skill_grammar;
      SkillProgressView skillGrammar = ViewBindings.findChildViewById(rootView, id);
      if (skillGrammar == null) {
        break missingId;
      }

      id = R.id.skill_listening;
      SkillProgressView skillListening = ViewBindings.findChildViewById(rootView, id);
      if (skillListening == null) {
        break missingId;
      }

      id = R.id.skill_pronunciation;
      SkillProgressView skillPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (skillPronunciation == null) {
        break missingId;
      }

      id = R.id.skill_reading;
      SkillProgressView skillReading = ViewBindings.findChildViewById(rootView, id);
      if (skillReading == null) {
        break missingId;
      }

      id = R.id.skill_vocabulary;
      SkillProgressView skillVocabulary = ViewBindings.findChildViewById(rootView, id);
      if (skillVocabulary == null) {
        break missingId;
      }

      id = R.id.skill_writing;
      SkillProgressView skillWriting = ViewBindings.findChildViewById(rootView, id);
      if (skillWriting == null) {
        break missingId;
      }

      id = R.id.tv_days_streak;
      TextView tvDaysStreak = ViewBindings.findChildViewById(rootView, id);
      if (tvDaysStreak == null) {
        break missingId;
      }

      id = R.id.tv_weekly_goal;
      TextView tvWeeklyGoal = ViewBindings.findChildViewById(rootView, id);
      if (tvWeeklyGoal == null) {
        break missingId;
      }

      id = R.id.tv_words_mastered;
      TextView tvWordsMastered = ViewBindings.findChildViewById(rootView, id);
      if (tvWordsMastered == null) {
        break missingId;
      }

      id = R.id.xp_tracker;
      XpTrackerView xpTracker = ViewBindings.findChildViewById(rootView, id);
      if (xpTracker == null) {
        break missingId;
      }

      return new FragmentUserProgressBinding((NestedScrollView) rootView, btnCustomizeDifficulty,
          btnMoreWords, cardDifficultySettings, cardOverallProgress, cardRecommendedSkills,
          cardRecommendedWords, cardSkillProgress, recyclerRecommendedSkills,
          recyclerRecommendedWords, skillGrammar, skillListening, skillPronunciation, skillReading,
          skillVocabulary, skillWriting, tvDaysStreak, tvWeeklyGoal, tvWordsMastered, xpTracker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
