// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FlashcardDeckItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton buttonFavoriteDeck;

  @NonNull
  public final ProgressBar progressBarMastery;

  @NonNull
  public final TextView textViewCardCount;

  @NonNull
  public final TextView textViewDeckCategory;

  @NonNull
  public final TextView textViewDeckDescription;

  @NonNull
  public final TextView textViewDeckTitle;

  @NonNull
  public final TextView textViewDeckTitleSecondary;

  @NonNull
  public final TextView textViewLastPracticed;

  @NonNull
  public final TextView textViewMasteryLabel;

  private FlashcardDeckItemBinding(@NonNull CardView rootView,
      @NonNull ImageButton buttonFavoriteDeck, @NonNull ProgressBar progressBarMastery,
      @NonNull TextView textViewCardCount, @NonNull TextView textViewDeckCategory,
      @NonNull TextView textViewDeckDescription, @NonNull TextView textViewDeckTitle,
      @NonNull TextView textViewDeckTitleSecondary, @NonNull TextView textViewLastPracticed,
      @NonNull TextView textViewMasteryLabel) {
    this.rootView = rootView;
    this.buttonFavoriteDeck = buttonFavoriteDeck;
    this.progressBarMastery = progressBarMastery;
    this.textViewCardCount = textViewCardCount;
    this.textViewDeckCategory = textViewDeckCategory;
    this.textViewDeckDescription = textViewDeckDescription;
    this.textViewDeckTitle = textViewDeckTitle;
    this.textViewDeckTitleSecondary = textViewDeckTitleSecondary;
    this.textViewLastPracticed = textViewLastPracticed;
    this.textViewMasteryLabel = textViewMasteryLabel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FlashcardDeckItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FlashcardDeckItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.flashcard_deck_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FlashcardDeckItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_favorite_deck;
      ImageButton buttonFavoriteDeck = ViewBindings.findChildViewById(rootView, id);
      if (buttonFavoriteDeck == null) {
        break missingId;
      }

      id = R.id.progress_bar_mastery;
      ProgressBar progressBarMastery = ViewBindings.findChildViewById(rootView, id);
      if (progressBarMastery == null) {
        break missingId;
      }

      id = R.id.text_view_card_count;
      TextView textViewCardCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewCardCount == null) {
        break missingId;
      }

      id = R.id.text_view_deck_category;
      TextView textViewDeckCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeckCategory == null) {
        break missingId;
      }

      id = R.id.text_view_deck_description;
      TextView textViewDeckDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeckDescription == null) {
        break missingId;
      }

      id = R.id.text_view_deck_title;
      TextView textViewDeckTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeckTitle == null) {
        break missingId;
      }

      id = R.id.text_view_deck_title_secondary;
      TextView textViewDeckTitleSecondary = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeckTitleSecondary == null) {
        break missingId;
      }

      id = R.id.text_view_last_practiced;
      TextView textViewLastPracticed = ViewBindings.findChildViewById(rootView, id);
      if (textViewLastPracticed == null) {
        break missingId;
      }

      id = R.id.text_view_mastery_label;
      TextView textViewMasteryLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewMasteryLabel == null) {
        break missingId;
      }

      return new FlashcardDeckItemBinding((CardView) rootView, buttonFavoriteDeck,
          progressBarMastery, textViewCardCount, textViewDeckCategory, textViewDeckDescription,
          textViewDeckTitle, textViewDeckTitleSecondary, textViewLastPracticed,
          textViewMasteryLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
