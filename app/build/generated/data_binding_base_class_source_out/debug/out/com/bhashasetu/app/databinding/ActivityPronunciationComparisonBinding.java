// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.view.AudioPronunciationView;
import com.bhashasetu.app.view.PronunciationRecorderView;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPronunciationComparisonBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioPronunciationView audioPronunciationView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final CardView cardViewProgress;

  @NonNull
  public final CardView cardViewTips;

  @NonNull
  public final CardView cardViewWord;

  @NonNull
  public final ProgressBar progressBarMastery;

  @NonNull
  public final PronunciationRecorderView pronunciationRecorderView;

  @NonNull
  public final TextView textViewEnglishWord;

  @NonNull
  public final TextView textViewHindiWord;

  @NonNull
  public final TextView textViewMasteryLevel;

  @NonNull
  public final TextView textViewProgressStats;

  @NonNull
  public final TextView textViewProgressTitle;

  @NonNull
  public final TextView textViewPronunciation;

  @NonNull
  public final TextView textViewTipsContent;

  @NonNull
  public final TextView textViewTipsTitle;

  @NonNull
  public final TextView textViewWordPrompt;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPronunciationComparisonBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioPronunciationView audioPronunciationView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull CardView cardViewProgress,
      @NonNull CardView cardViewTips, @NonNull CardView cardViewWord,
      @NonNull ProgressBar progressBarMastery,
      @NonNull PronunciationRecorderView pronunciationRecorderView,
      @NonNull TextView textViewEnglishWord, @NonNull TextView textViewHindiWord,
      @NonNull TextView textViewMasteryLevel, @NonNull TextView textViewProgressStats,
      @NonNull TextView textViewProgressTitle, @NonNull TextView textViewPronunciation,
      @NonNull TextView textViewTipsContent, @NonNull TextView textViewTipsTitle,
      @NonNull TextView textViewWordPrompt, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.audioPronunciationView = audioPronunciationView;
    this.bottomNavigation = bottomNavigation;
    this.cardViewProgress = cardViewProgress;
    this.cardViewTips = cardViewTips;
    this.cardViewWord = cardViewWord;
    this.progressBarMastery = progressBarMastery;
    this.pronunciationRecorderView = pronunciationRecorderView;
    this.textViewEnglishWord = textViewEnglishWord;
    this.textViewHindiWord = textViewHindiWord;
    this.textViewMasteryLevel = textViewMasteryLevel;
    this.textViewProgressStats = textViewProgressStats;
    this.textViewProgressTitle = textViewProgressTitle;
    this.textViewPronunciation = textViewPronunciation;
    this.textViewTipsContent = textViewTipsContent;
    this.textViewTipsTitle = textViewTipsTitle;
    this.textViewWordPrompt = textViewWordPrompt;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPronunciationComparisonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPronunciationComparisonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pronunciation_comparison, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPronunciationComparisonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_pronunciation_view;
      AudioPronunciationView audioPronunciationView = ViewBindings.findChildViewById(rootView, id);
      if (audioPronunciationView == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.card_view_progress;
      CardView cardViewProgress = ViewBindings.findChildViewById(rootView, id);
      if (cardViewProgress == null) {
        break missingId;
      }

      id = R.id.card_view_tips;
      CardView cardViewTips = ViewBindings.findChildViewById(rootView, id);
      if (cardViewTips == null) {
        break missingId;
      }

      id = R.id.card_view_word;
      CardView cardViewWord = ViewBindings.findChildViewById(rootView, id);
      if (cardViewWord == null) {
        break missingId;
      }

      id = R.id.progress_bar_mastery;
      ProgressBar progressBarMastery = ViewBindings.findChildViewById(rootView, id);
      if (progressBarMastery == null) {
        break missingId;
      }

      id = R.id.pronunciation_recorder_view;
      PronunciationRecorderView pronunciationRecorderView = ViewBindings.findChildViewById(rootView, id);
      if (pronunciationRecorderView == null) {
        break missingId;
      }

      id = R.id.text_view_english_word;
      TextView textViewEnglishWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewEnglishWord == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_word;
      TextView textViewHindiWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiWord == null) {
        break missingId;
      }

      id = R.id.text_view_mastery_level;
      TextView textViewMasteryLevel = ViewBindings.findChildViewById(rootView, id);
      if (textViewMasteryLevel == null) {
        break missingId;
      }

      id = R.id.text_view_progress_stats;
      TextView textViewProgressStats = ViewBindings.findChildViewById(rootView, id);
      if (textViewProgressStats == null) {
        break missingId;
      }

      id = R.id.text_view_progress_title;
      TextView textViewProgressTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewProgressTitle == null) {
        break missingId;
      }

      id = R.id.text_view_pronunciation;
      TextView textViewPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (textViewPronunciation == null) {
        break missingId;
      }

      id = R.id.text_view_tips_content;
      TextView textViewTipsContent = ViewBindings.findChildViewById(rootView, id);
      if (textViewTipsContent == null) {
        break missingId;
      }

      id = R.id.text_view_tips_title;
      TextView textViewTipsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTipsTitle == null) {
        break missingId;
      }

      id = R.id.text_view_word_prompt;
      TextView textViewWordPrompt = ViewBindings.findChildViewById(rootView, id);
      if (textViewWordPrompt == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPronunciationComparisonBinding((ConstraintLayout) rootView,
          audioPronunciationView, bottomNavigation, cardViewProgress, cardViewTips, cardViewWord,
          progressBarMastery, pronunciationRecorderView, textViewEnglishWord, textViewHindiWord,
          textViewMasteryLevel, textViewProgressStats, textViewProgressTitle, textViewPronunciation,
          textViewTipsContent, textViewTipsTitle, textViewWordPrompt, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
