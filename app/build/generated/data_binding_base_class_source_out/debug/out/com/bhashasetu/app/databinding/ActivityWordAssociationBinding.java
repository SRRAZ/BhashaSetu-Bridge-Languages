// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.view.AudioPronunciationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWordAssociationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioPronunciationView audioPronunciation;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final Button buttonPlayAgain;

  @NonNull
  public final CardView cardViewGameOver;

  @NonNull
  public final CardView cardViewSelectedWord;

  @NonNull
  public final LinearLayout layoutTopBar;

  @NonNull
  public final ProgressBar progressBarTimer;

  @NonNull
  public final RecyclerView recyclerViewGrid;

  @NonNull
  public final TextView textViewFinalScore;

  @NonNull
  public final TextView textViewGameOverTitle;

  @NonNull
  public final TextView textViewLives;

  @NonNull
  public final TextView textViewMatchesMade;

  @NonNull
  public final TextView textViewScore;

  @NonNull
  public final TextView textViewSelectedWord;

  @NonNull
  public final TextView textViewTimer;

  private ActivityWordAssociationBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioPronunciationView audioPronunciation, @NonNull Button buttonExit,
      @NonNull Button buttonPlayAgain, @NonNull CardView cardViewGameOver,
      @NonNull CardView cardViewSelectedWord, @NonNull LinearLayout layoutTopBar,
      @NonNull ProgressBar progressBarTimer, @NonNull RecyclerView recyclerViewGrid,
      @NonNull TextView textViewFinalScore, @NonNull TextView textViewGameOverTitle,
      @NonNull TextView textViewLives, @NonNull TextView textViewMatchesMade,
      @NonNull TextView textViewScore, @NonNull TextView textViewSelectedWord,
      @NonNull TextView textViewTimer) {
    this.rootView = rootView;
    this.audioPronunciation = audioPronunciation;
    this.buttonExit = buttonExit;
    this.buttonPlayAgain = buttonPlayAgain;
    this.cardViewGameOver = cardViewGameOver;
    this.cardViewSelectedWord = cardViewSelectedWord;
    this.layoutTopBar = layoutTopBar;
    this.progressBarTimer = progressBarTimer;
    this.recyclerViewGrid = recyclerViewGrid;
    this.textViewFinalScore = textViewFinalScore;
    this.textViewGameOverTitle = textViewGameOverTitle;
    this.textViewLives = textViewLives;
    this.textViewMatchesMade = textViewMatchesMade;
    this.textViewScore = textViewScore;
    this.textViewSelectedWord = textViewSelectedWord;
    this.textViewTimer = textViewTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWordAssociationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWordAssociationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_word_association, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWordAssociationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_pronunciation;
      AudioPronunciationView audioPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (audioPronunciation == null) {
        break missingId;
      }

      id = R.id.button_exit;
      Button buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.button_play_again;
      Button buttonPlayAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayAgain == null) {
        break missingId;
      }

      id = R.id.card_view_game_over;
      CardView cardViewGameOver = ViewBindings.findChildViewById(rootView, id);
      if (cardViewGameOver == null) {
        break missingId;
      }

      id = R.id.card_view_selected_word;
      CardView cardViewSelectedWord = ViewBindings.findChildViewById(rootView, id);
      if (cardViewSelectedWord == null) {
        break missingId;
      }

      id = R.id.layout_top_bar;
      LinearLayout layoutTopBar = ViewBindings.findChildViewById(rootView, id);
      if (layoutTopBar == null) {
        break missingId;
      }

      id = R.id.progress_bar_timer;
      ProgressBar progressBarTimer = ViewBindings.findChildViewById(rootView, id);
      if (progressBarTimer == null) {
        break missingId;
      }

      id = R.id.recycler_view_grid;
      RecyclerView recyclerViewGrid = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewGrid == null) {
        break missingId;
      }

      id = R.id.text_view_final_score;
      TextView textViewFinalScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewFinalScore == null) {
        break missingId;
      }

      id = R.id.text_view_game_over_title;
      TextView textViewGameOverTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewGameOverTitle == null) {
        break missingId;
      }

      id = R.id.text_view_lives;
      TextView textViewLives = ViewBindings.findChildViewById(rootView, id);
      if (textViewLives == null) {
        break missingId;
      }

      id = R.id.text_view_matches_made;
      TextView textViewMatchesMade = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchesMade == null) {
        break missingId;
      }

      id = R.id.text_view_score;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      id = R.id.text_view_selected_word;
      TextView textViewSelectedWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectedWord == null) {
        break missingId;
      }

      id = R.id.text_view_timer;
      TextView textViewTimer = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimer == null) {
        break missingId;
      }

      return new ActivityWordAssociationBinding((ConstraintLayout) rootView, audioPronunciation,
          buttonExit, buttonPlayAgain, cardViewGameOver, cardViewSelectedWord, layoutTopBar,
          progressBarTimer, recyclerViewGrid, textViewFinalScore, textViewGameOverTitle,
          textViewLives, textViewMatchesMade, textViewScore, textViewSelectedWord, textViewTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
