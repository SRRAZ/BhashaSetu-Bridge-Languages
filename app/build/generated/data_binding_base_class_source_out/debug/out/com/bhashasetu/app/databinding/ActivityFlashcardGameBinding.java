// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.view.AudioPronunciationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFlashcardGameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioPronunciationView audioPronunciation;

  @NonNull
  public final Button buttonAnswer1;

  @NonNull
  public final Button buttonAnswer2;

  @NonNull
  public final Button buttonAnswer3;

  @NonNull
  public final Button buttonAnswer4;

  @NonNull
  public final Button buttonCheck;

  @NonNull
  public final Button buttonDontKnow;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final Button buttonFlip;

  @NonNull
  public final Button buttonKnow;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final Button buttonPlayAgain;

  @NonNull
  public final FrameLayout cardContainer;

  @NonNull
  public final CardView cardViewBack;

  @NonNull
  public final CardView cardViewFront;

  @NonNull
  public final CardView cardViewGameOver;

  @NonNull
  public final ConstraintLayout layoutControls;

  @NonNull
  public final ConstraintLayout layoutQuiz;

  @NonNull
  public final ConstraintLayout layoutSpelling;

  @NonNull
  public final TextView textViewBackTitle;

  @NonNull
  public final TextView textViewBackWord;

  @NonNull
  public final TextView textViewCorrectAnswers;

  @NonNull
  public final TextView textViewFinalScore;

  @NonNull
  public final TextView textViewFrontTitle;

  @NonNull
  public final TextView textViewFrontWord;

  @NonNull
  public final TextView textViewGameOverTitle;

  @NonNull
  public final TextView textViewProgress;

  @NonNull
  public final TextView textViewQuestion;

  @NonNull
  public final TextView textViewScore;

  @NonNull
  public final TextView textViewScoreLabel;

  @NonNull
  public final EditText textViewSpellingAnswer;

  @NonNull
  public final TextView textViewSpellingQuestion;

  @NonNull
  public final TextView textViewTitle;

  private ActivityFlashcardGameBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioPronunciationView audioPronunciation, @NonNull Button buttonAnswer1,
      @NonNull Button buttonAnswer2, @NonNull Button buttonAnswer3, @NonNull Button buttonAnswer4,
      @NonNull Button buttonCheck, @NonNull Button buttonDontKnow, @NonNull Button buttonExit,
      @NonNull Button buttonFlip, @NonNull Button buttonKnow, @NonNull Button buttonNext,
      @NonNull Button buttonPlayAgain, @NonNull FrameLayout cardContainer,
      @NonNull CardView cardViewBack, @NonNull CardView cardViewFront,
      @NonNull CardView cardViewGameOver, @NonNull ConstraintLayout layoutControls,
      @NonNull ConstraintLayout layoutQuiz, @NonNull ConstraintLayout layoutSpelling,
      @NonNull TextView textViewBackTitle, @NonNull TextView textViewBackWord,
      @NonNull TextView textViewCorrectAnswers, @NonNull TextView textViewFinalScore,
      @NonNull TextView textViewFrontTitle, @NonNull TextView textViewFrontWord,
      @NonNull TextView textViewGameOverTitle, @NonNull TextView textViewProgress,
      @NonNull TextView textViewQuestion, @NonNull TextView textViewScore,
      @NonNull TextView textViewScoreLabel, @NonNull EditText textViewSpellingAnswer,
      @NonNull TextView textViewSpellingQuestion, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.audioPronunciation = audioPronunciation;
    this.buttonAnswer1 = buttonAnswer1;
    this.buttonAnswer2 = buttonAnswer2;
    this.buttonAnswer3 = buttonAnswer3;
    this.buttonAnswer4 = buttonAnswer4;
    this.buttonCheck = buttonCheck;
    this.buttonDontKnow = buttonDontKnow;
    this.buttonExit = buttonExit;
    this.buttonFlip = buttonFlip;
    this.buttonKnow = buttonKnow;
    this.buttonNext = buttonNext;
    this.buttonPlayAgain = buttonPlayAgain;
    this.cardContainer = cardContainer;
    this.cardViewBack = cardViewBack;
    this.cardViewFront = cardViewFront;
    this.cardViewGameOver = cardViewGameOver;
    this.layoutControls = layoutControls;
    this.layoutQuiz = layoutQuiz;
    this.layoutSpelling = layoutSpelling;
    this.textViewBackTitle = textViewBackTitle;
    this.textViewBackWord = textViewBackWord;
    this.textViewCorrectAnswers = textViewCorrectAnswers;
    this.textViewFinalScore = textViewFinalScore;
    this.textViewFrontTitle = textViewFrontTitle;
    this.textViewFrontWord = textViewFrontWord;
    this.textViewGameOverTitle = textViewGameOverTitle;
    this.textViewProgress = textViewProgress;
    this.textViewQuestion = textViewQuestion;
    this.textViewScore = textViewScore;
    this.textViewScoreLabel = textViewScoreLabel;
    this.textViewSpellingAnswer = textViewSpellingAnswer;
    this.textViewSpellingQuestion = textViewSpellingQuestion;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFlashcardGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFlashcardGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_flashcard_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFlashcardGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_pronunciation;
      AudioPronunciationView audioPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (audioPronunciation == null) {
        break missingId;
      }

      id = R.id.button_answer_1;
      Button buttonAnswer1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonAnswer1 == null) {
        break missingId;
      }

      id = R.id.button_answer_2;
      Button buttonAnswer2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonAnswer2 == null) {
        break missingId;
      }

      id = R.id.button_answer_3;
      Button buttonAnswer3 = ViewBindings.findChildViewById(rootView, id);
      if (buttonAnswer3 == null) {
        break missingId;
      }

      id = R.id.button_answer_4;
      Button buttonAnswer4 = ViewBindings.findChildViewById(rootView, id);
      if (buttonAnswer4 == null) {
        break missingId;
      }

      id = R.id.button_check;
      Button buttonCheck = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheck == null) {
        break missingId;
      }

      id = R.id.button_dont_know;
      Button buttonDontKnow = ViewBindings.findChildViewById(rootView, id);
      if (buttonDontKnow == null) {
        break missingId;
      }

      id = R.id.button_exit;
      Button buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.button_flip;
      Button buttonFlip = ViewBindings.findChildViewById(rootView, id);
      if (buttonFlip == null) {
        break missingId;
      }

      id = R.id.button_know;
      Button buttonKnow = ViewBindings.findChildViewById(rootView, id);
      if (buttonKnow == null) {
        break missingId;
      }

      id = R.id.button_next;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.button_play_again;
      Button buttonPlayAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayAgain == null) {
        break missingId;
      }

      id = R.id.card_container;
      FrameLayout cardContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardContainer == null) {
        break missingId;
      }

      id = R.id.card_view_back;
      CardView cardViewBack = ViewBindings.findChildViewById(rootView, id);
      if (cardViewBack == null) {
        break missingId;
      }

      id = R.id.card_view_front;
      CardView cardViewFront = ViewBindings.findChildViewById(rootView, id);
      if (cardViewFront == null) {
        break missingId;
      }

      id = R.id.card_view_game_over;
      CardView cardViewGameOver = ViewBindings.findChildViewById(rootView, id);
      if (cardViewGameOver == null) {
        break missingId;
      }

      id = R.id.layout_controls;
      ConstraintLayout layoutControls = ViewBindings.findChildViewById(rootView, id);
      if (layoutControls == null) {
        break missingId;
      }

      id = R.id.layout_quiz;
      ConstraintLayout layoutQuiz = ViewBindings.findChildViewById(rootView, id);
      if (layoutQuiz == null) {
        break missingId;
      }

      id = R.id.layout_spelling;
      ConstraintLayout layoutSpelling = ViewBindings.findChildViewById(rootView, id);
      if (layoutSpelling == null) {
        break missingId;
      }

      id = R.id.text_view_back_title;
      TextView textViewBackTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewBackTitle == null) {
        break missingId;
      }

      id = R.id.text_view_back_word;
      TextView textViewBackWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewBackWord == null) {
        break missingId;
      }

      id = R.id.text_view_correct_answers;
      TextView textViewCorrectAnswers = ViewBindings.findChildViewById(rootView, id);
      if (textViewCorrectAnswers == null) {
        break missingId;
      }

      id = R.id.text_view_final_score;
      TextView textViewFinalScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewFinalScore == null) {
        break missingId;
      }

      id = R.id.text_view_front_title;
      TextView textViewFrontTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewFrontTitle == null) {
        break missingId;
      }

      id = R.id.text_view_front_word;
      TextView textViewFrontWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewFrontWord == null) {
        break missingId;
      }

      id = R.id.text_view_game_over_title;
      TextView textViewGameOverTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewGameOverTitle == null) {
        break missingId;
      }

      id = R.id.text_view_progress;
      TextView textViewProgress = ViewBindings.findChildViewById(rootView, id);
      if (textViewProgress == null) {
        break missingId;
      }

      id = R.id.text_view_question;
      TextView textViewQuestion = ViewBindings.findChildViewById(rootView, id);
      if (textViewQuestion == null) {
        break missingId;
      }

      id = R.id.text_view_score;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      id = R.id.text_view_score_label;
      TextView textViewScoreLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewScoreLabel == null) {
        break missingId;
      }

      id = R.id.text_view_spelling_answer;
      EditText textViewSpellingAnswer = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpellingAnswer == null) {
        break missingId;
      }

      id = R.id.text_view_spelling_question;
      TextView textViewSpellingQuestion = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpellingQuestion == null) {
        break missingId;
      }

      id = R.id.text_view_title;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new ActivityFlashcardGameBinding((ConstraintLayout) rootView, audioPronunciation,
          buttonAnswer1, buttonAnswer2, buttonAnswer3, buttonAnswer4, buttonCheck, buttonDontKnow,
          buttonExit, buttonFlip, buttonKnow, buttonNext, buttonPlayAgain, cardContainer,
          cardViewBack, cardViewFront, cardViewGameOver, layoutControls, layoutQuiz, layoutSpelling,
          textViewBackTitle, textViewBackWord, textViewCorrectAnswers, textViewFinalScore,
          textViewFrontTitle, textViewFrontWord, textViewGameOverTitle, textViewProgress,
          textViewQuestion, textViewScore, textViewScoreLabel, textViewSpellingAnswer,
          textViewSpellingQuestion, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
