// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.bhashasetu.app.view.AudioPronunciationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPictureMatchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AudioPronunciationView audioPronunciation;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final Button buttonOption1;

  @NonNull
  public final Button buttonOption2;

  @NonNull
  public final Button buttonOption3;

  @NonNull
  public final Button buttonOption4;

  @NonNull
  public final Button buttonPlayAgain;

  @NonNull
  public final CardView cardViewCompletion;

  @NonNull
  public final CardView cardViewPicture;

  @NonNull
  public final ImageView imageViewPicture;

  @NonNull
  public final LinearLayout layoutHeader;

  @NonNull
  public final ConstraintLayout layoutOptions;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ProgressBar progressBarAccuracy;

  @NonNull
  public final TextView textViewAccuracy;

  @NonNull
  public final TextView textViewCompletionScore;

  @NonNull
  public final TextView textViewCompletionTitle;

  @NonNull
  public final TextView textViewFeedback;

  @NonNull
  public final TextView textViewInstructions;

  @NonNull
  public final TextView textViewQuestion;

  @NonNull
  public final TextView textViewScore;

  private ActivityPictureMatchBinding(@NonNull ConstraintLayout rootView,
      @NonNull AudioPronunciationView audioPronunciation, @NonNull Button buttonExit,
      @NonNull Button buttonNext, @NonNull Button buttonOption1, @NonNull Button buttonOption2,
      @NonNull Button buttonOption3, @NonNull Button buttonOption4, @NonNull Button buttonPlayAgain,
      @NonNull CardView cardViewCompletion, @NonNull CardView cardViewPicture,
      @NonNull ImageView imageViewPicture, @NonNull LinearLayout layoutHeader,
      @NonNull ConstraintLayout layoutOptions, @NonNull ProgressBar progressBar,
      @NonNull ProgressBar progressBarAccuracy, @NonNull TextView textViewAccuracy,
      @NonNull TextView textViewCompletionScore, @NonNull TextView textViewCompletionTitle,
      @NonNull TextView textViewFeedback, @NonNull TextView textViewInstructions,
      @NonNull TextView textViewQuestion, @NonNull TextView textViewScore) {
    this.rootView = rootView;
    this.audioPronunciation = audioPronunciation;
    this.buttonExit = buttonExit;
    this.buttonNext = buttonNext;
    this.buttonOption1 = buttonOption1;
    this.buttonOption2 = buttonOption2;
    this.buttonOption3 = buttonOption3;
    this.buttonOption4 = buttonOption4;
    this.buttonPlayAgain = buttonPlayAgain;
    this.cardViewCompletion = cardViewCompletion;
    this.cardViewPicture = cardViewPicture;
    this.imageViewPicture = imageViewPicture;
    this.layoutHeader = layoutHeader;
    this.layoutOptions = layoutOptions;
    this.progressBar = progressBar;
    this.progressBarAccuracy = progressBarAccuracy;
    this.textViewAccuracy = textViewAccuracy;
    this.textViewCompletionScore = textViewCompletionScore;
    this.textViewCompletionTitle = textViewCompletionTitle;
    this.textViewFeedback = textViewFeedback;
    this.textViewInstructions = textViewInstructions;
    this.textViewQuestion = textViewQuestion;
    this.textViewScore = textViewScore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPictureMatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPictureMatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_picture_match, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPictureMatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_pronunciation;
      AudioPronunciationView audioPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (audioPronunciation == null) {
        break missingId;
      }

      id = R.id.button_exit;
      Button buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.button_next;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.button_option_1;
      Button buttonOption1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonOption1 == null) {
        break missingId;
      }

      id = R.id.button_option_2;
      Button buttonOption2 = ViewBindings.findChildViewById(rootView, id);
      if (buttonOption2 == null) {
        break missingId;
      }

      id = R.id.button_option_3;
      Button buttonOption3 = ViewBindings.findChildViewById(rootView, id);
      if (buttonOption3 == null) {
        break missingId;
      }

      id = R.id.button_option_4;
      Button buttonOption4 = ViewBindings.findChildViewById(rootView, id);
      if (buttonOption4 == null) {
        break missingId;
      }

      id = R.id.button_play_again;
      Button buttonPlayAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayAgain == null) {
        break missingId;
      }

      id = R.id.card_view_completion;
      CardView cardViewCompletion = ViewBindings.findChildViewById(rootView, id);
      if (cardViewCompletion == null) {
        break missingId;
      }

      id = R.id.card_view_picture;
      CardView cardViewPicture = ViewBindings.findChildViewById(rootView, id);
      if (cardViewPicture == null) {
        break missingId;
      }

      id = R.id.image_view_picture;
      ImageView imageViewPicture = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPicture == null) {
        break missingId;
      }

      id = R.id.layout_header;
      LinearLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.layout_options;
      ConstraintLayout layoutOptions = ViewBindings.findChildViewById(rootView, id);
      if (layoutOptions == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progress_bar_accuracy;
      ProgressBar progressBarAccuracy = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAccuracy == null) {
        break missingId;
      }

      id = R.id.text_view_accuracy;
      TextView textViewAccuracy = ViewBindings.findChildViewById(rootView, id);
      if (textViewAccuracy == null) {
        break missingId;
      }

      id = R.id.text_view_completion_score;
      TextView textViewCompletionScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewCompletionScore == null) {
        break missingId;
      }

      id = R.id.text_view_completion_title;
      TextView textViewCompletionTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewCompletionTitle == null) {
        break missingId;
      }

      id = R.id.text_view_feedback;
      TextView textViewFeedback = ViewBindings.findChildViewById(rootView, id);
      if (textViewFeedback == null) {
        break missingId;
      }

      id = R.id.text_view_instructions;
      TextView textViewInstructions = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructions == null) {
        break missingId;
      }

      id = R.id.text_view_question;
      TextView textViewQuestion = ViewBindings.findChildViewById(rootView, id);
      if (textViewQuestion == null) {
        break missingId;
      }

      id = R.id.text_view_score;
      TextView textViewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewScore == null) {
        break missingId;
      }

      return new ActivityPictureMatchBinding((ConstraintLayout) rootView, audioPronunciation,
          buttonExit, buttonNext, buttonOption1, buttonOption2, buttonOption3, buttonOption4,
          buttonPlayAgain, cardViewCompletion, cardViewPicture, imageViewPicture, layoutHeader,
          layoutOptions, progressBar, progressBarAccuracy, textViewAccuracy,
          textViewCompletionScore, textViewCompletionTitle, textViewFeedback, textViewInstructions,
          textViewQuestion, textViewScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
