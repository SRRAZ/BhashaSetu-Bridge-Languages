// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonClearProgress;

  @NonNull
  public final TextView settingsTitle;

  @NonNull
  public final SwitchCompat switchAudioEnabled;

  @NonNull
  public final SwitchCompat switchDailyReminder;

  @NonNull
  public final SwitchCompat switchHindiInterface;

  @NonNull
  public final TextView textViewVersion;

  @NonNull
  public final TimePicker timePickerReminder;

  @NonNull
  public final Toolbar toolbar;

  private ActivitySettingsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonClearProgress, @NonNull TextView settingsTitle,
      @NonNull SwitchCompat switchAudioEnabled, @NonNull SwitchCompat switchDailyReminder,
      @NonNull SwitchCompat switchHindiInterface, @NonNull TextView textViewVersion,
      @NonNull TimePicker timePickerReminder, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonClearProgress = buttonClearProgress;
    this.settingsTitle = settingsTitle;
    this.switchAudioEnabled = switchAudioEnabled;
    this.switchDailyReminder = switchDailyReminder;
    this.switchHindiInterface = switchHindiInterface;
    this.textViewVersion = textViewVersion;
    this.timePickerReminder = timePickerReminder;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_clear_progress;
      MaterialButton buttonClearProgress = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearProgress == null) {
        break missingId;
      }

      id = R.id.settings_title;
      TextView settingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (settingsTitle == null) {
        break missingId;
      }

      id = R.id.switch_audio_enabled;
      SwitchCompat switchAudioEnabled = ViewBindings.findChildViewById(rootView, id);
      if (switchAudioEnabled == null) {
        break missingId;
      }

      id = R.id.switch_daily_reminder;
      SwitchCompat switchDailyReminder = ViewBindings.findChildViewById(rootView, id);
      if (switchDailyReminder == null) {
        break missingId;
      }

      id = R.id.switch_hindi_interface;
      SwitchCompat switchHindiInterface = ViewBindings.findChildViewById(rootView, id);
      if (switchHindiInterface == null) {
        break missingId;
      }

      id = R.id.text_view_version;
      TextView textViewVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewVersion == null) {
        break missingId;
      }

      id = R.id.time_picker_reminder;
      TimePicker timePickerReminder = ViewBindings.findChildViewById(rootView, id);
      if (timePickerReminder == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((CoordinatorLayout) rootView, buttonClearProgress,
          settingsTitle, switchAudioEnabled, switchDailyReminder, switchHindiInterface,
          textViewVersion, timePickerReminder, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
