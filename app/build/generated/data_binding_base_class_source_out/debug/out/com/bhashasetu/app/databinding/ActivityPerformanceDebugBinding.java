// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPerformanceDebugBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnRunStressTest;

  @NonNull
  public final Button btnTakeSnapshot;

  @NonNull
  public final Button btnToggleOverlay;

  @NonNull
  public final TextView tvDetailedMetrics;

  @NonNull
  public final TextView tvFpsValue;

  @NonNull
  public final TextView tvMemoryValue;

  @NonNull
  public final TextView tvNetworkValue;

  private ActivityPerformanceDebugBinding(@NonNull ScrollView rootView,
      @NonNull Button btnRunStressTest, @NonNull Button btnTakeSnapshot,
      @NonNull Button btnToggleOverlay, @NonNull TextView tvDetailedMetrics,
      @NonNull TextView tvFpsValue, @NonNull TextView tvMemoryValue,
      @NonNull TextView tvNetworkValue) {
    this.rootView = rootView;
    this.btnRunStressTest = btnRunStressTest;
    this.btnTakeSnapshot = btnTakeSnapshot;
    this.btnToggleOverlay = btnToggleOverlay;
    this.tvDetailedMetrics = tvDetailedMetrics;
    this.tvFpsValue = tvFpsValue;
    this.tvMemoryValue = tvMemoryValue;
    this.tvNetworkValue = tvNetworkValue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPerformanceDebugBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPerformanceDebugBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_performance_debug, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPerformanceDebugBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_run_stress_test;
      Button btnRunStressTest = ViewBindings.findChildViewById(rootView, id);
      if (btnRunStressTest == null) {
        break missingId;
      }

      id = R.id.btn_take_snapshot;
      Button btnTakeSnapshot = ViewBindings.findChildViewById(rootView, id);
      if (btnTakeSnapshot == null) {
        break missingId;
      }

      id = R.id.btn_toggle_overlay;
      Button btnToggleOverlay = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleOverlay == null) {
        break missingId;
      }

      id = R.id.tv_detailed_metrics;
      TextView tvDetailedMetrics = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailedMetrics == null) {
        break missingId;
      }

      id = R.id.tv_fps_value;
      TextView tvFpsValue = ViewBindings.findChildViewById(rootView, id);
      if (tvFpsValue == null) {
        break missingId;
      }

      id = R.id.tv_memory_value;
      TextView tvMemoryValue = ViewBindings.findChildViewById(rootView, id);
      if (tvMemoryValue == null) {
        break missingId;
      }

      id = R.id.tv_network_value;
      TextView tvNetworkValue = ViewBindings.findChildViewById(rootView, id);
      if (tvNetworkValue == null) {
        break missingId;
      }

      return new ActivityPerformanceDebugBinding((ScrollView) rootView, btnRunStressTest,
          btnTakeSnapshot, btnToggleOverlay, tvDetailedMetrics, tvFpsValue, tvMemoryValue,
          tvNetworkValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
