// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAchievementBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView achievementCard;

  @NonNull
  public final TextView achievementDescription;

  @NonNull
  public final ImageView achievementIcon;

  @NonNull
  public final TextView achievementPoints;

  @NonNull
  public final ProgressBar achievementProgressBar;

  @NonNull
  public final TextView achievementProgressText;

  @NonNull
  public final TextView achievementStatus;

  @NonNull
  public final TextView achievementTitle;

  private ItemAchievementBinding(@NonNull CardView rootView, @NonNull CardView achievementCard,
      @NonNull TextView achievementDescription, @NonNull ImageView achievementIcon,
      @NonNull TextView achievementPoints, @NonNull ProgressBar achievementProgressBar,
      @NonNull TextView achievementProgressText, @NonNull TextView achievementStatus,
      @NonNull TextView achievementTitle) {
    this.rootView = rootView;
    this.achievementCard = achievementCard;
    this.achievementDescription = achievementDescription;
    this.achievementIcon = achievementIcon;
    this.achievementPoints = achievementPoints;
    this.achievementProgressBar = achievementProgressBar;
    this.achievementProgressText = achievementProgressText;
    this.achievementStatus = achievementStatus;
    this.achievementTitle = achievementTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAchievementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAchievementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_achievement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAchievementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView achievementCard = (CardView) rootView;

      id = R.id.achievement_description;
      TextView achievementDescription = ViewBindings.findChildViewById(rootView, id);
      if (achievementDescription == null) {
        break missingId;
      }

      id = R.id.achievement_icon;
      ImageView achievementIcon = ViewBindings.findChildViewById(rootView, id);
      if (achievementIcon == null) {
        break missingId;
      }

      id = R.id.achievement_points;
      TextView achievementPoints = ViewBindings.findChildViewById(rootView, id);
      if (achievementPoints == null) {
        break missingId;
      }

      id = R.id.achievement_progress_bar;
      ProgressBar achievementProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (achievementProgressBar == null) {
        break missingId;
      }

      id = R.id.achievement_progress_text;
      TextView achievementProgressText = ViewBindings.findChildViewById(rootView, id);
      if (achievementProgressText == null) {
        break missingId;
      }

      id = R.id.achievement_status;
      TextView achievementStatus = ViewBindings.findChildViewById(rootView, id);
      if (achievementStatus == null) {
        break missingId;
      }

      id = R.id.achievement_title;
      TextView achievementTitle = ViewBindings.findChildViewById(rootView, id);
      if (achievementTitle == null) {
        break missingId;
      }

      return new ItemAchievementBinding((CardView) rootView, achievementCard,
          achievementDescription, achievementIcon, achievementPoints, achievementProgressBar,
          achievementProgressText, achievementStatus, achievementTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
