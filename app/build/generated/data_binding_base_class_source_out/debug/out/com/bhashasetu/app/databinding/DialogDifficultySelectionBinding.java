// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDifficultySelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonStart;

  @NonNull
  public final Spinner spinnerCategory;

  @NonNull
  public final Spinner spinnerDifficulty;

  private DialogDifficultySelectionBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonCancel, @NonNull Button buttonStart, @NonNull Spinner spinnerCategory,
      @NonNull Spinner spinnerDifficulty) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonStart = buttonStart;
    this.spinnerCategory = spinnerCategory;
    this.spinnerDifficulty = spinnerDifficulty;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDifficultySelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDifficultySelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_difficulty_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDifficultySelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_start;
      Button buttonStart = ViewBindings.findChildViewById(rootView, id);
      if (buttonStart == null) {
        break missingId;
      }

      id = R.id.spinner_category;
      Spinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.spinner_difficulty;
      Spinner spinnerDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDifficulty == null) {
        break missingId;
      }

      return new DialogDifficultySelectionBinding((LinearLayout) rootView, buttonCancel,
          buttonStart, spinnerCategory, spinnerDifficulty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
