// Generated by view binder compiler. Do not edit!
package com.bhashasetu.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bhashasetu.app.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySpellingPracticeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCheckSpelling;

  @NonNull
  public final Button buttonNextWord;

  @NonNull
  public final ImageButton buttonPlayPronunciation;

  @NonNull
  public final CardView cardViewHindiWord;

  @NonNull
  public final CardView cardViewResult;

  @NonNull
  public final TextInputEditText editTextSpelling;

  @NonNull
  public final ProgressBar progressBarSpelling;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextView textViewHindiLabel;

  @NonNull
  public final TextView textViewHindiPronunciation;

  @NonNull
  public final TextView textViewHindiWord;

  @NonNull
  public final TextView textViewProgress;

  @NonNull
  public final TextView textViewResult;

  @NonNull
  public final TextView textViewSpellInstruction;

  @NonNull
  public final TextView textViewSpellingTitle;

  private ActivitySpellingPracticeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonCheckSpelling, @NonNull Button buttonNextWord,
      @NonNull ImageButton buttonPlayPronunciation, @NonNull CardView cardViewHindiWord,
      @NonNull CardView cardViewResult, @NonNull TextInputEditText editTextSpelling,
      @NonNull ProgressBar progressBarSpelling, @NonNull TextInputLayout textInputLayout,
      @NonNull TextView textViewHindiLabel, @NonNull TextView textViewHindiPronunciation,
      @NonNull TextView textViewHindiWord, @NonNull TextView textViewProgress,
      @NonNull TextView textViewResult, @NonNull TextView textViewSpellInstruction,
      @NonNull TextView textViewSpellingTitle) {
    this.rootView = rootView;
    this.buttonCheckSpelling = buttonCheckSpelling;
    this.buttonNextWord = buttonNextWord;
    this.buttonPlayPronunciation = buttonPlayPronunciation;
    this.cardViewHindiWord = cardViewHindiWord;
    this.cardViewResult = cardViewResult;
    this.editTextSpelling = editTextSpelling;
    this.progressBarSpelling = progressBarSpelling;
    this.textInputLayout = textInputLayout;
    this.textViewHindiLabel = textViewHindiLabel;
    this.textViewHindiPronunciation = textViewHindiPronunciation;
    this.textViewHindiWord = textViewHindiWord;
    this.textViewProgress = textViewProgress;
    this.textViewResult = textViewResult;
    this.textViewSpellInstruction = textViewSpellInstruction;
    this.textViewSpellingTitle = textViewSpellingTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySpellingPracticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySpellingPracticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_spelling_practice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySpellingPracticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_check_spelling;
      Button buttonCheckSpelling = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckSpelling == null) {
        break missingId;
      }

      id = R.id.button_next_word;
      Button buttonNextWord = ViewBindings.findChildViewById(rootView, id);
      if (buttonNextWord == null) {
        break missingId;
      }

      id = R.id.button_play_pronunciation;
      ImageButton buttonPlayPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayPronunciation == null) {
        break missingId;
      }

      id = R.id.card_view_hindi_word;
      CardView cardViewHindiWord = ViewBindings.findChildViewById(rootView, id);
      if (cardViewHindiWord == null) {
        break missingId;
      }

      id = R.id.card_view_result;
      CardView cardViewResult = ViewBindings.findChildViewById(rootView, id);
      if (cardViewResult == null) {
        break missingId;
      }

      id = R.id.edit_text_spelling;
      TextInputEditText editTextSpelling = ViewBindings.findChildViewById(rootView, id);
      if (editTextSpelling == null) {
        break missingId;
      }

      id = R.id.progress_bar_spelling;
      ProgressBar progressBarSpelling = ViewBindings.findChildViewById(rootView, id);
      if (progressBarSpelling == null) {
        break missingId;
      }

      id = R.id.text_input_layout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_label;
      TextView textViewHindiLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiLabel == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_pronunciation;
      TextView textViewHindiPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiPronunciation == null) {
        break missingId;
      }

      id = R.id.text_view_hindi_word;
      TextView textViewHindiWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewHindiWord == null) {
        break missingId;
      }

      id = R.id.text_view_progress;
      TextView textViewProgress = ViewBindings.findChildViewById(rootView, id);
      if (textViewProgress == null) {
        break missingId;
      }

      id = R.id.text_view_result;
      TextView textViewResult = ViewBindings.findChildViewById(rootView, id);
      if (textViewResult == null) {
        break missingId;
      }

      id = R.id.text_view_spell_instruction;
      TextView textViewSpellInstruction = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpellInstruction == null) {
        break missingId;
      }

      id = R.id.text_view_spelling_title;
      TextView textViewSpellingTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpellingTitle == null) {
        break missingId;
      }

      return new ActivitySpellingPracticeBinding((ConstraintLayout) rootView, buttonCheckSpelling,
          buttonNextWord, buttonPlayPronunciation, cardViewHindiWord, cardViewResult,
          editTextSpelling, progressBarSpelling, textInputLayout, textViewHindiLabel,
          textViewHindiPronunciation, textViewHindiWord, textViewProgress, textViewResult,
          textViewSpellInstruction, textViewSpellingTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
