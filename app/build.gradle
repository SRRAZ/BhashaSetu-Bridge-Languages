plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

// Load keystore properties if available
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.englishhindi"
    compileSdk 34
    
    defaultConfig {
        applicationId "com.example.englishhindi"
        minSdk 21
        targetSdk 34
        
        // Updated for release
        versionCode 2
        versionName "1.1.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Set vectors for backward compatibility
        vectorDrawables.useSupportLibrary = true
        
        // Multidex support
        multiDexEnabled true
        // Example: Only include English and Hindi string resources
        resConfigs "en", "hi"
    }
    
    // Signing configuration
    signingConfigs {
        release {
            storeFile keystoreProperties.getProperty('storeFile') ? file(keystoreProperties.getProperty('storeFile')) : null
            storePassword keystoreProperties.getProperty('keystorePassword')
            keyAlias keystoreProperties.getProperty('keyAlias')
            keyPassword keystoreProperties.getProperty('keyPassword')
        }
    }
    
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
            minifyEnabled false
        }
        
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    
    // Product flavors for different app versions
    flavorDimensions += ["version"]
    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
            // Free version specific configurations
            buildConfigField "boolean", "PREMIUM_FEATURES_ENABLED", "false"
        }
        
        premium {
            dimension "version"
            applicationIdSuffix ".premium"
            versionNameSuffix "-premium"
            // Premium version specific configurations
            buildConfigField "boolean", "PREMIUM_FEATURES_ENABLED", "true"
        }
    }
    
    // Bundle configuration
    bundle {
        language {
            // Include only English and Hindi resources in the base APK
            enableSplit = true
            // include = ['en', 'hi']  (Commented this as it was not working while syncing Gradle.)
        }
        density {
            // Enable density-based APK splitting
            enableSplit = true
        }
        abi {
            // Enable ABI-based APK splitting
            enableSplit = true
        }
    }
    
    // Jetpack Compose configuration
    buildFeatures {
        compose true
        buildConfig true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.3"
    }
    
    // Use Java toolchain API instead of sourceCompatibility/targetCompatibility
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    // Resolve duplicate resources conflicts
    packaging {
        resources {
            pickFirsts += [
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE.txt',
                'META-INF/DEPENDENCIES'
            ]
        }
    }
    
    // Lint options
    lint {
        abortOnError false
        checkReleaseBuilds true
        disable 'MissingTranslation'
    }
}

dependencies {
    // Core libraries
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Kotlin Core
    implementation 'androidx.core:core-ktx:1.16.0'
    
    // Jetpack Compose
    implementation platform('androidx.compose:compose-bom:2025.05.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.9.0'
    implementation 'androidx.navigation:navigation-compose:2.9.0'
    implementation 'io.coil-kt:coil-compose:2.5.0'
    
    // Jetpack Compose - Preview
    debugImplementation 'androidx.compose.ui:ui-tooling'
    
    // Room for database with Kotlin
    implementation 'androidx.room:room-ktx:2.7.1'
    implementation 'androidx.room:room-runtime:2.7.1'
    kapt 'androidx.room:room-compiler:2.7.1'
    
    // Coroutines and Flow
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    
    // Lifecycle and ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.0'
    
    // Navigation components
    implementation 'androidx.navigation:navigation-fragment-ktx:2.9.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.9.0'
    
    // Image loading and caching
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    kapt 'com.github.bumptech.glide:compiler:4.16.0'
    
    // TensorFlow Lite for ML features (pronunciation)
    implementation 'org.tensorflow:tensorflow-lite:2.14.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.4'
    
    // Unit testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    
    // Android testing
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    
    // UI testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.6.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    
    // Performance testing and monitoring
    androidTestImplementation 'androidx.benchmark:benchmark-junit4:1.3.4'
    
    // LeakCanary - only for debug builds
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
}